[{"F:\\dev\\alex\\src\\index.js":"1","F:\\dev\\alex\\src\\App.js":"2","F:\\dev\\alex\\src\\FindExpense.js":"3","F:\\dev\\alex\\src\\HomePage.js":"4","F:\\dev\\alex\\src\\ViewExpenses.js":"5","F:\\dev\\alex\\src\\InputPage.js":"6","F:\\dev\\alex\\src\\NewNav.js":"7","F:\\dev\\alex\\src\\database.js":"8","F:\\dev\\alex\\src\\FindExpensesData.js":"9","F:\\dev\\alex\\src\\ViewExpenseData.js":"10","F:\\dev\\alex\\src\\Header.js":"11"},{"size":430,"mtime":1690850301630,"results":"12","hashOfConfig":"13"},{"size":875,"mtime":1690850301627,"results":"14","hashOfConfig":"13"},{"size":616,"mtime":1690855538270,"results":"15","hashOfConfig":"13"},{"size":612,"mtime":1690855281389,"results":"16","hashOfConfig":"13"},{"size":754,"mtime":1690855173236,"results":"17","hashOfConfig":"13"},{"size":573,"mtime":1690855553808,"results":"18","hashOfConfig":"13"},{"size":1416,"mtime":1690853981111,"results":"19","hashOfConfig":"13"},{"size":2539,"mtime":1690850301630,"results":"20","hashOfConfig":"13"},{"size":4425,"mtime":1690850301628,"results":"21","hashOfConfig":"13"},{"size":4829,"mtime":1690850301630,"results":"22","hashOfConfig":"13"},{"size":1984,"mtime":1690859979875,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ec89wz",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\dev\\alex\\src\\index.js",[],[],"F:\\dev\\alex\\src\\App.js",[],[],"F:\\dev\\alex\\src\\FindExpense.js",[],[],"F:\\dev\\alex\\src\\HomePage.js",[],[],"F:\\dev\\alex\\src\\ViewExpenses.js",["60","61","62","63","64"],[],"F:\\dev\\alex\\src\\InputPage.js",[],[],"F:\\dev\\alex\\src\\NewNav.js",[],[],"F:\\dev\\alex\\src\\database.js",["65"],[],"import {useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function Expenses(){\r\n\r\n\r\n    const [Etype, setEtype] = useState(\"\");\r\n    const [Eprice, setEprice] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [selectData, setSelectData] = useState(\"\");\r\n\r\n\r\n\r\n    useEffect( ()=> {\r\n        let processing = true;\r\n        axiosFetchData(processing);\r\n        return () => {\r\n            processing = false;\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const axiosFetchData = async(processing) => {\r\n        \r\n\r\n        await axios.get(\"http://localhost:4000/expenses\")\r\n        .then(res => {\r\n\r\n            if(processing){\r\n                setSelectData(res.data)\r\n\r\n            }\r\n\r\n\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n    }\r\n    \r\n\r\n    const axiosPostData = async() => {\r\n        const postData = {\r\n            Etype: Etype,\r\n            Eprice: Eprice\r\n\r\n        }\r\n        await axios.post(\"http://localhost:4000/expenses\", postData)\r\n        .then(res => setError(<p className=\"success\">{res.data}</p>))\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(!Eprice && ! Etype){\r\n\r\n            setError(<p className=\"required\">Both fields are empty</p>)\r\n\r\n        }\r\n\r\n        else if(!Etype)\r\n        {\r\n            setError(<p className=\"required\">Etype is empty</p>)\r\n            console.log(\"error\")\r\n\r\n\r\n        }\r\n        else if (!Eprice){\r\n\r\n            setError(<p className=\"required\">Eprice is empty</p>)\r\n            \r\n        }\r\n        else{\r\n           // setError(<p>message sent</p>)\r\n\r\n            \r\n            axiosPostData()\r\n\r\n        }\r\n       // setError('')\r\n        \r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <h1>Test</h1>\r\n            <form>\r\n                <label>Expense Type: </label>\r\n                <input type=\"text\" id=\"Etype\" name=\"Etype\" placeholder=\"Expense Type\" value={Etype} onChange={ (event) => setEtype(event.target.value)}/>\r\n                <br/>\r\n                <br/>\r\n                <label>Expense Price: </label>\r\n                <input type=\"text\" id=\"Eprice\" name=\"Eprice\" placeholder=\"Expense Price\" value={Eprice} onChange={ (event) => setEprice(event.target.value)}/>\r\n                <br/>\r\n                <br/>\r\n                <button type=\"submit\" onClick={handleSubmit}>Submit</button>\r\n                \r\n                {error}\r\n\r\n\r\n            </form>\r\n        \r\n        \r\n        \r\n        \r\n        </>\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n","F:\\dev\\alex\\src\\FindExpensesData.js",["66"],[],"import \"./FED.css\"\r\nimport { useState, useEffect, useReducer } from \"react\"\r\nimport axios from \"axios\"\r\nimport \"./ViewExpenses.css\"\r\n\r\nexport default function FindExpensesData(){\r\n    const [FED, setFED] = useState(\"\")\r\n    console.log(FED)\r\n\r\n\r\n    const [selectData, setSelectData] = useState(\"\");\r\n    const [foundData, setFoundData] = useState(\"\");\r\n    \r\n    \r\n\r\n\r\n\r\n    useEffect( ()=> {\r\n        let processing = true;\r\n        axiosFetchData(processing);\r\n        return () => {\r\n            processing = false;\r\n            \r\n\r\n        }\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    \r\n\r\n\r\n    const axiosFetchData = async(processing) => {\r\n        \r\n\r\n        await axios.get(\"http://localhost:4000/expenses\")\r\n        .then(res => {\r\n\r\n            if(processing){\r\n                setSelectData(res.data)\r\n              \r\n\r\n            }\r\n\r\n\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setFoundData(<div className=\"scrollbox\">\r\n                        \r\n                        {Seedata()}\r\n                    \r\n\r\n                    </div>)\r\n\r\n    }\r\n  \r\n \r\n    \r\n    const deleteExpense = (id, name) =>{\r\n        \r\n       \r\n        \r\n        if(window.confirm(`Are you sure you want to delete ${name}?`))\r\n        {\r\n            fetch(\"http://localhost:4000/deleteExpense\", {\r\n                method: \"POST\",\r\n                crossDomain: true,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n\r\n                },\r\n                body: JSON.stringify({\r\n                    \r\n                    expenseid: id\r\n\r\n                }),\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                alert(data.data);\r\n            });\r\n            alert(\"Deleted Expense\");\r\n            window.location.reload(false)\r\n            \r\n            \r\n\r\n        }else{\r\n            alert(\"Did Not Delete Expense\")\r\n\r\n\r\n        }\r\n        \r\n       \r\n        \r\n\r\n\r\n   }\r\n\r\n\r\n   \r\n    function Seedata(){\r\n        let flag = 0\r\n        for(let i = 0; i < selectData.length; i++)\r\n        {\r\n            if(selectData[i]?.Etype === FED){\r\n                flag = 1\r\n            }\r\n\r\n\r\n        }   \r\n        if(flag === 0){\r\n            return(<p>No Data Found</p>)\r\n        }     \r\n       // console.log(selectData[FED].Etype)\r\n        else{\r\n        return(<div>\r\n            {Object.keys(selectData).filter(key => selectData[key].Etype === FED).map((key, i) => (\r\n                \r\n                <p key = {key}>\r\n\r\n                <span>Expense Type: {selectData[key].Etype}</span>\r\n                <br/>\r\n                <span>Expense Price: ${selectData[key].Eprice}</span>\r\n                <br/>\r\n                <button onClick={()=> deleteExpense(selectData[key]._id, selectData[key].Etype)}>Delete</button>\r\n                \r\n                </p>\r\n\r\n\r\n            ))}\r\n\r\n\r\n\r\n        </div>)}\r\n\r\n       /*\r\n        return(<div>\r\n           {selectData.filter(expense => expense.Etype === FED).map((filteredexpenses, idx) =>  (\r\n\r\n            <p filteredexpenses={idx}>\r\n                {selectData[filteredexpenses]?.Etype} : {selectData[filteredexpenses]?.Eprice}\r\n            </p>\r\n\r\n\r\n           ))}\r\n    \r\n    \r\n        </div>\r\n        )\r\n\r\n*/\r\n    }\r\n\r\n    /*\r\n    return(<div>\r\n        {Object.keys(selectData).map((key, i) => (\r\n            <p key = {i}>\r\n\r\n                <span>Expense Type: {selectData[key].Etype}</span>\r\n                <br/>\r\n                <span>Expense Price: {selectData[key].Eprice}</span>\r\n                <br/>\r\n                \r\n\r\n\r\n\r\n            </p>\r\n\r\n\r\n\r\n\r\n        ))}\r\n\r\n\r\n\r\n    </div>\r\n    )\r\n\r\n\r\n\r\n    }\r\n*/\r\n\r\n    \r\n\r\n\r\n    return(<div>\r\n        <h1>Search for Expense</h1>\r\n        <input type=\"text\" id=\"FED\" name=\"FED\" placeholder=\"Search\" value={FED} onChange={ (event) => setFED(event.target.value)}/>\r\n        <button type=\"submit\" onClick={handleSubmit} >Submit</button>\r\n        {foundData}\r\n\r\n{/* \r\n        <div>\r\n            \r\n        {selectData.filter(expense => expense.Etype === FED).map(filteredexpenses =>  (\r\n\r\n            <li>\r\n                {filteredexpenses.Etype} : {filteredexpenses.Eprice}\r\n            </li>\r\n\r\n\r\n            ))}\r\n        </div>\r\n        */}\r\n\r\n    </div>)\r\n\r\n\r\n\r\n}","F:\\dev\\alex\\src\\ViewExpenseData.js",["67","68","69","70","71","72","73"],[],"import {useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport xtype from 'xtypejs';\r\nimport \"./ViewExpenses.css\";\r\n\r\n\r\nexport default function ViewExpenseData(){\r\n\r\n\r\n    const [Etype, setEtype] = useState(\"\");\r\n    const [Eprice, setEprice] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [selectData, setSelectData] = useState(\"\");\r\n    const [jsonData, setJsonData] = useState(\"\");\r\n    \r\n    \r\n\r\n\r\n\r\n    useEffect( ()=> {\r\n        let processing = true;\r\n        axiosFetchData(processing);\r\n        return () => {\r\n            processing = false;\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const axiosFetchData = async(processing) => {\r\n        \r\n\r\n        await axios.get(\"http://localhost:4000/expenses\")\r\n        .then(res => {\r\n\r\n            if(processing){\r\n                setSelectData(res.data)\r\n              \r\n\r\n            }\r\n\r\n\r\n        })\r\n        .catch(err => console.log(err))\r\n        //let Myobject = JSON.parse(selectData)\r\n        \r\n        \r\n      //  console.log(Dataarray)\r\n\r\n        //setJsonData(JSON.stringify(selectData));\r\n        \r\n       // setJsonData(JSON.stringify(selectData));\r\n        \r\n      //  console.log(Array.isArray(jsonData));\r\n       \r\n        // const result = Array.from(selectData).map();\r\n        //console.log(result);\r\n       \r\n        \r\n       // console.log(selectData)\r\n        \r\n    }\r\n    \r\n\r\n    const axiosPostData = async() => {\r\n        const postData = {\r\n            Etype: Etype,\r\n            Eprice: Eprice\r\n\r\n        }\r\n        await axios.post(\"http://localhost:4000/expenses\", postData)\r\n        .then(res => setError(<p className=\"success\">{res.data}</p>))\r\n\r\n\r\n\r\n    }\r\n   // axiosFetchData();\r\n\r\n\r\n\r\n\r\n   const deleteExpense = (id, name) =>{\r\n\r\n        \r\n        if(window.confirm(`Are you sure you want to delete ${name}?`))\r\n        {\r\n            fetch(\"http://localhost:4000/deleteExpense\", {\r\n                method: \"POST\",\r\n                crossDomain: true,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n\r\n                },\r\n                body: JSON.stringify({\r\n                    \r\n                    expenseid: id\r\n\r\n                }),\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                alert(data.data);\r\n            });\r\n            alert(\"Deleted Expense\");\r\n            window.location.reload(false)\r\n            \r\n            \r\n\r\n        }else{\r\n            alert(\"Did Not Delete Expense\")\r\n\r\n\r\n        }\r\n        \r\n    \r\n\r\n   }\r\n\r\n\r\n   //console.log(selectData[2]?.Etype);\r\n/*\r\n   function Seedata(){\r\n    let strings = []\r\n    for(let i = 0; i < selectData.length; i++){\r\n        let thestring = `${selectData[i]?.Etype}: $${selectData[i]?.Eprice}\\n`\r\n        strings.push(thestring)\r\n\r\n\r\n    }\r\n    console.log(strings)\r\n    return(strings.map((string, index) => {\r\n        return (<p key={index}>{string}<button onClick={()=>deleteExpense(string)}>Delete</button></p>)\r\n\r\n\r\n    }))\r\n\r\n   }\r\n   */\r\n   function Seedata(){\r\n    if(selectData.length === 0)\r\n    {\r\n    return(<div>No Data</div>)\r\n    }\r\n    return(<div>\r\n        {Object.keys(selectData).map((key, i) => (\r\n            <p key = {i}>\r\n\r\n                <span>Expense Type: {selectData[key].Etype}</span>\r\n                <br/>\r\n                <span>Expense Price: ${selectData[key].Eprice}</span>\r\n                <br/>\r\n                <button onClick={()=> deleteExpense(selectData[key]._id, selectData[key].Etype)}>Delete</button>\r\n\r\n\r\n\r\n            </p>\r\n\r\n\r\n\r\n\r\n        ))}\r\n\r\n\r\n\r\n    </div>\r\n    )\r\n\r\n\r\n\r\n   }\r\n   \r\n\r\n\r\n/*\r\n    function Seedata(){\r\n\r\n    let string = \"\";\r\n\r\n    \r\n     for(let i = 0; i < selectData.length; i++)\r\n     {\r\n\r\n        string = string + `${selectData[i]?.Etype}: $${selectData[i]?.Eprice}\\n`\r\n        \r\n\r\n\r\n     }\r\n     return(string);\r\n    }\r\n    */\r\n\r\n/*\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(!Eprice && ! Etype){\r\n\r\n            setError(<p className=\"required\">Both fields are empty</p>)\r\n\r\n        }\r\n\r\n        else if(!Etype)\r\n        {\r\n            setError(<p className=\"required\">Etype is empty</p>)\r\n\r\n\r\n        }\r\n        else if (!Eprice){\r\n\r\n            setError(<p className=\"required\">Eprice is empty</p>)\r\n        }\r\n        else{\r\n            setError(<p>message sent</p>)\r\n\r\n        }\r\n        setError('')\r\n        axiosFetchData()\r\n        \r\n    }\r\n\r\n*/\r\n    \r\n    \r\n\r\n\r\n    return(\r\n        <>\r\n            <h1>Test</h1>\r\n            <div className=\"scrollbox\">\r\n            \r\n            {Seedata()}\r\n            \r\n\r\n            </div>\r\n        \r\n        \r\n        \r\n        \r\n        </>\r\n\r\n\r\n\r\n\r\n    )\r\n    \r\n\r\n\r\n}\r\n\r\n","F:\\dev\\alex\\src\\Header.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":16},{"ruleId":"74","severity":1,"message":"78","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":19},{"ruleId":"74","severity":1,"message":"79","line":5,"column":21,"nodeType":"76","messageId":"77","endLine":5,"endColumn":30},{"ruleId":"74","severity":1,"message":"80","line":5,"column":32,"nodeType":"76","messageId":"77","endLine":5,"endColumn":40},{"ruleId":"74","severity":1,"message":"81","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":13},{"ruleId":"74","severity":1,"message":"82","line":11,"column":12,"nodeType":"76","messageId":"77","endLine":11,"endColumn":22},{"ruleId":"74","severity":1,"message":"83","line":2,"column":31,"nodeType":"76","messageId":"77","endLine":2,"endColumn":41},{"ruleId":"74","severity":1,"message":"84","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":13},{"ruleId":"74","severity":1,"message":"85","line":10,"column":19,"nodeType":"76","messageId":"77","endLine":10,"endColumn":27},{"ruleId":"74","severity":1,"message":"86","line":11,"column":20,"nodeType":"76","messageId":"77","endLine":11,"endColumn":29},{"ruleId":"74","severity":1,"message":"87","line":12,"column":12,"nodeType":"76","messageId":"77","endLine":12,"endColumn":17},{"ruleId":"74","severity":1,"message":"88","line":14,"column":12,"nodeType":"76","messageId":"77","endLine":14,"endColumn":20},{"ruleId":"74","severity":1,"message":"89","line":14,"column":22,"nodeType":"76","messageId":"77","endLine":14,"endColumn":33},{"ruleId":"74","severity":1,"message":"90","line":69,"column":11,"nodeType":"76","messageId":"77","endLine":69,"endColumn":24},"no-unused-vars","'Expenses' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'selectData' is assigned a value but never used.","'useReducer' is defined but never used.","'xtype' is defined but never used.","'setEtype' is assigned a value but never used.","'setEprice' is assigned a value but never used.","'error' is assigned a value but never used.","'jsonData' is assigned a value but never used.","'setJsonData' is assigned a value but never used.","'axiosPostData' is assigned a value but never used."]